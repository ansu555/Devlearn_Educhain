import { NextResponse } from "next/server"

// Temporary in-memory store (replace with a real database in production)
let courses = [
  {
    id: 1,
    title: "Solidity Smart Contract Development",
    description: "Learn to build secure and efficient smart contracts on Ethereum",
    level: "Intermediate",
    duration: "8 weeks",
    modules: 12,
    credentials: "Verified Smart Contract Developer",
    category: "smart-contracts",
  },
  // ... other initial courses
]

/**
 * GET /api/courses
 * Returns all courses.
 */
export async function GET() {
  return NextResponse.json(courses)
}

/**
 * POST /api/courses
 * Generates a new course (placeholder for Gemini) and adds it to the list.
 */
export async function POST(request: Request) {
  try {
    // In a real app, you'd parse a 'prompt' from the request body and call Gemini:
    // const { prompt } = await request.json()
    // const newCourse = await generateCourseFromGemini(prompt)

    // For now, just create a dummy course:
    const newCourse = {
      id: Date.now(),
      title: "AI-Generated Course",
      description: "This course was generated by an AI model.",
      level: "Beginner",
      duration: "4 weeks",
      modules: 7,
      credentials: "AI-Powered Certificate",
      category: "web3",
    }

    courses.push(newCourse)
    return NextResponse.json(newCourse)
  } catch (error) {
    return NextResponse.json({ error: error.message }, { status: 500 })
  }
}
